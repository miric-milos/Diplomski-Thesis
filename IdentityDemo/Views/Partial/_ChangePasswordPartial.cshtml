@model Users.Models.ChangePasswordModel
@using Microsoft.AspNet.Identity


<div class="row d-flex justify-content-center mb-5">
    <div class="col-md-8">
        <div class="card shadow-sm border-danger">
            <div class="card-header">
                <h5 class="card-title my-auto">Napredna podešavanja</h5>
            </div>
            <div class="card-body">
                <div class="row">

                    <div class="col-md-7" id="changePassword">
                        <p class="card-text font-weight-bolder">Promeni lozinku</p>

                        <div id="validationMessagesWrapper">
                            @Html.ValidationMessage("ChangePasswordValidation", new { @class = "text-danger my-3" })
                            <p class="text-success my-3">@ViewBag.ChangePassSuccess</p>
                        </div>

                        @using (Ajax.BeginForm("PromeniLozinku", "Admin", new { userId = User.Identity.GetUserId() },
                                new AjaxOptions
                                {
                                    HttpMethod = "POST",
                                    UpdateTargetId = "promenaLozinke"
                                }, new { @id = "frmPromeniLozinku" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-group">
                                <label for="trenutna">Trenutna lozinka</label>
                                @Html.PasswordFor(m => m.CurrentPassword, new { @id = "trenutna", @class = "form-control border-round" })
                            </div>

                            <div class="form-group">
                                <label for="nova">Nova lozinka</label>
                                @Html.PasswordFor(m => m.NewPassword, new { @id = "nova", @class = "form-control border-round" })
                            </div>

                            <button id="btnPromeniLozinku" type="button" class="btn btn-danger border-round">Promeni lozinku</button>
                        }
                    </div>

                    <div class="col-md-5 border-left" id="obrisiNalog">
                        <div class="p-1 h-100">
                            <p class="card-text">Deaktiviranje naloga <br /><span class="text-danger font-weight-bold">Ova akcija se ne može poništiti!</span></p>

                            @Html.ValidationMessage("AccountDeleteValidation")
                            @TempData["accNotFoundError"]

                            @using (Html.BeginForm("ObrisiNalog", "Admin", new { userId = User.Identity.GetUserId() }, FormMethod.Post, new { @id = "frmObrisiNalog" }))
                            {
                                @Html.AntiForgeryToken()
                                <button type="button" id="btnObrisiNalog" class="btn btn-danger border-round w-100 mt-5">Deaktiviraj nalog</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(() => {

        $("#btnPromeniLozinku").click(() => {
            if ($("#trenutna").val() == "" || $("#nova").val() == "") {
                // Prazno
                $("#validationMessagesWrapper").append(`<p class = "text-danger my-3">Oba polja su obavezna!</p>`);
            } else {
                $("#frmPromeniLozinku").submit();
            }
        });

        $("#btnObrisiNalog").click(() => {
            if (confirm("Da li ste sigurni?")) {
                $("#frmObrisiNalog").submit();
            }
        });
    });
</script>